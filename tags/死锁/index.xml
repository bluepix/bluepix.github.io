<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>死锁 on 诗川的笔记</title>
    <link>/tags/%E6%AD%BB%E9%94%81/</link>
    <description>Recent content in 死锁 on 诗川的笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>©2020 bluepix</copyright>
    <lastBuildDate>Thu, 02 Apr 2020 11:40:59 +0800</lastBuildDate>
    
        <atom:link href="/tags/%E6%AD%BB%E9%94%81/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[JCIP] 10.避免活跃性风险</title>
      <link>/notes/jcip/jcip-10-avoid-liveness-hazards/</link>
      <pubDate>Thu, 02 Apr 2020 11:40:59 +0800</pubDate>
      
      <guid>/notes/jcip/jcip-10-avoid-liveness-hazards/</guid>
      <description>死锁 最简单的死锁 (deadlock) 是两个线程各自持有对方想要获取的锁, 导致无限等待. 在表示等待关系的图上存在环, 则死锁存在. 数据库系统会检测和恢复事务死锁 (</description>
      
    </item>
    
  </channel>
</rss>
